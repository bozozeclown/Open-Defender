# k8s/security.yaml
apiVersion: v1
kind: Secret
metadata:
  name: security-monitoring-secrets
  namespace: security-monitoring
type: Opaque
data:
  jwt-secret: <base64-encoded-jwt-secret>
  database-password: <base64-encoded-db-password>
  redis-password: <base64-encoded-redis-password>
  vault-token: <base64-encoded-vault-token>
  grafana-password: <base64-encoded-grafana-password>
---
apiVersion: v1
kind: Secret
metadata:
  name: security-monitoring-certs
  namespace: security-monitoring
type: kubernetes.io/tls
data:
  tls.crt: <base64-encoded-tls-certificate>
  tls.key: <base64-encoded-tls-private-key>
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: security-monitoring-security-config
  namespace: security-monitoring
data:
  security.yaml: |
    authentication:
      jwt_expiry_hours: 24
      refresh_token_expiry_hours: 168
      mfa_enabled: true
      mfa_methods: ["TOTP"]
      max_login_attempts: 5
      lockout_duration_minutes: 15
      password_policy:
        min_length: 12
        require_uppercase: true
        require_lowercase: true
        require_numbers: true
        require_special_chars: true
        prevent_reuse: 5
        expiry_days: 90
    authorization:
      rbac_enabled: true
      default_role: "viewer"
      session_timeout: 3600
    encryption:
      enabled: true
      algorithm: "AES-256-GCM"
      key_rotation_days: 90
      sensitive_fields: ["password", "token", "secret", "key", "credential"]
    network:
      allowed_origins: ["https://security.yourdomain.com"]
      rate_limiting:
        enabled: true
        requests_per_minute: 60
        burst_size: 10
        by_ip: true
        by_user: true
      cors:
        allowed_origins: ["https://security.yourdomain.com"]
        allowed_methods: ["GET", "POST", "PUT", "DELETE", "OPTIONS"]
        allowed_headers: ["Content-Type", "Authorization"]
        allow_credentials: true
        max_age_seconds: 3600
      tls:
        enabled: true
        min_version: "TLSv1.2"
        cipher_suites: ["TLS_AES_128_GCM_SHA256", "TLS_AES_256_GCM_SHA384"]
    audit:
      enabled: true
      log_security_events: true
      log_auth_events: true
      log_data_access: true
      retention_days: 365
      sensitive_data_masking: true
    secrets:
      provider: "vault"
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: security-monitoring-pdb
  namespace: security-monitoring
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: security-monitoring
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: security-monitoring-netpol
  namespace: security-monitoring
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: security-monitoring
    - podSelector:
        matchLabels:
          app: nginx
    ports:
    - protocol: TCP
      port: 8000
    - protocol: TCP
      port: 8001
    - protocol: TCP
      port: 9090
  egress:
  - to: []
    ports:
    - protocol: TCP
      port: 5432
  - to: []
    ports:
    - protocol: TCP
      port: 6379
  - to: []
    ports:
    - protocol: TCP
      port: 8200
  - to: []
    ports:
    - protocol: UDP
      port: 53
  - to: []
    ports:
    - protocol: TCP
      port: 443
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: security-monitoring-sa
  namespace: security-monitoring
  annotations:
    iam.amazonaws.com/role: security-monitoring-role
automountServiceAccountToken: false
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: security-monitoring-role
  namespace: security-monitoring
rules:
- apiGroups: [""]
  resources: ["pods", "services", "configmaps", "secrets", "endpoints"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["policy"]
  resources: ["poddisruptionbudgets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["networking.k8s.io"]
  resources: ["networkpolicies"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: security-monitoring-role-binding
  namespace: security-monitoring
subjects:
- kind: ServiceAccount
  name: security-monitoring-sa
  namespace: security-monitoring
roleRef:
  kind: Role
  name: security-monitoring-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ResourceQuota
metadata:
  name: security-monitoring-quota
  namespace: security-monitoring
spec:
  hard:
    requests.cpu: "4"
    requests.memory: 8Gi
    limits.cpu: "8"
    limits.memory: 16Gi
    persistentvolumeclaims: "5"
    requests.storage: 100Gi
    count/deployments.apps: "10"
    count/pods: "20"
    count/services: "10"
    count/secrets: "20"